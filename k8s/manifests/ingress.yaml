apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: weather-api
  annotations:
    kubernetes.io/ingress.class: nginx
    # Rewrite paths - captures everything after /weather/ and forwards to backend
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    
    # CORS settings
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, X-Requested-With"
    
    # Proxy settings
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-connections: "50"
    nginx.ingress.kubernetes.io/limit-rps: "25"
    
    # Error handling
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"
    
    # Important: Use regex for path matching
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    # Backend protocol
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
spec:
  ingressClassName: nginx
  rules:
  # OPTION 1: No host restriction (works with any Host header including from API Gateway)
  - http:
      paths:
      # Match /weather/* and forward to backend
      - path: /weather(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: weather-api
            port:
              number: 80
      
      # Also match root path for health checks
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: weather-api
            port:
              number: 80