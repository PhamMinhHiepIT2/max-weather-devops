apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-api
  labels:
    app: weather-api
  annotations:
    logs.k8s.aws/enabled: "true"
    logs.k8s.aws/log-group-name: "/aws/containerlogs/weather-api"
    logs.k8s.aws/retention-days: "30"
spec:
  replicas: 3
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: weather-api
  template:
    metadata:
      labels:
        app: weather-api
      annotations:
        logs.k8s.aws/enabled: "true"
        logs.k8s.aws/log-group-name: "/aws/containerlogs/weather-api"
        logs.k8s.aws/retention-days: "30"
    spec:
      serviceAccountName: weather-api
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - weather-api
              topologyKey: kubernetes.io/hostname
      containers:
      - name: weather-api
        image: your-registry/weather-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: weather-api-config
        - secretRef:
            name: weather-api-secrets
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 2
          failureThreshold: 3

